<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   http://www.springframework.org/schema/security 
   http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
   <security:http auto-config="true" use-expressions="true" access-denied-page="/auth/denied" >
        
  
        <security:intercept-url pattern="/*" access="permitAll"/>
        <security:intercept-url pattern="/book/delete/*" access="hasRole('ROLE_ADMINISTRATOR')"/>
        <security:intercept-url pattern="/auth/*" access="hasRole('ROLE_ADMINISTRATOR')"/>
<!--  <security:intercept-url pattern="/krams/main/common" access="hasRole('ROLE_USER')"/>-->
   
        <security:form-login
            login-page="/login"
            authentication-failure-url="/auth/login?error=true"
            default-target-url="/"
        />
    
        <security:logout
            invalidate-session="true"
            logout-success-url="/login"
            logout-url="/logout"
        />
  
    </security:http>
  
 <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
  
 <!-- Use a SHA1 encoder since the user's passwords are stored as SHA1 in the database -->
    <bean class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" id="passwordEncoder"/>
 
 <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
    <bean id="customUserDetailsService" class="library.client.UserDetailsProvider"/> 
    

    
</beans>