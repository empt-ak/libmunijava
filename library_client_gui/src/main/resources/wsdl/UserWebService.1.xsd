<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://webservice.library/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="UserWebService" targetNamespace="http://webservice.library/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://webservice.library/" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://webservice.library/">
<xs:element name="createUser" type="tns:createUser"/>
<xs:element name="createUserResponse" type="tns:createUserResponse"/>
<xs:element name="deleteUser" type="tns:deleteUser"/>
<xs:element name="deleteUserResponse" type="tns:deleteUserResponse"/>
<xs:element name="findUserByRealName" type="tns:findUserByRealName"/>
<xs:element name="findUserByRealNameResponse" type="tns:findUserByRealNameResponse"/>
<xs:element name="getUserByID" type="tns:getUserByID"/>
<xs:element name="getUserByIDResponse" type="tns:getUserByIDResponse"/>
<xs:element name="getUserByUsername" type="tns:getUserByUsername"/>
<xs:element name="getUserByUsernameResponse" type="tns:getUserByUsernameResponse"/>
<xs:element name="getUsers" type="tns:getUsers"/>
<xs:element name="getUsersResponse" type="tns:getUsersResponse"/>
<xs:element name="updateUser" type="tns:updateUser"/>
<xs:element name="updateUserResponse" type="tns:updateUserResponse"/>
<xs:complexType name="getUserByUsername">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserByUsernameResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userDTO">
<xs:sequence>
<xs:element minOccurs="0" name="password" type="xs:string"/>
<xs:element minOccurs="0" name="realName" type="xs:string"/>
<xs:element minOccurs="0" name="systemRole" type="xs:string"/>
<xs:element minOccurs="0" name="userID" type="xs:long"/>
<xs:element minOccurs="0" name="username" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createUser">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="createUserResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getUsers">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getUsersResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateUser">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateUserResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="deleteUser">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteUserResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getUserByID">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserByIDResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="findUserByRealName">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="findUserByRealNameResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:userDTO"/>
</xs:sequence>
</xs:complexType>
<xs:element name="IllegalArgumentException" type="tns:IllegalArgumentException"/>
<xs:complexType name="IllegalArgumentException">
<xs:sequence/>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="createUser">
    <wsdl:part element="ns1:createUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserResponse">
    <wsdl:part element="ns1:updateUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse">
    <wsdl:part element="ns1:deleteUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUserByRealNameResponse">
    <wsdl:part element="ns1:findUserByRealNameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUser">
    <wsdl:part element="ns1:deleteUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByIDResponse">
    <wsdl:part element="ns1:getUserByIDResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsers">
    <wsdl:part element="ns1:getUsers" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUser">
    <wsdl:part element="ns1:updateUser" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IllegalArgumentException">
    <wsdl:part element="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersResponse">
    <wsdl:part element="ns1:getUsersResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUsername">
    <wsdl:part element="ns1:getUserByUsername" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUsernameResponse">
    <wsdl:part element="ns1:getUserByUsernameResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByID">
    <wsdl:part element="ns1:getUserByID" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUserResponse">
    <wsdl:part element="ns1:createUserResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findUserByRealName">
    <wsdl:part element="ns1:findUserByRealName" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="UserWebService">
    <wsdl:operation name="getUserByUsername">
      <wsdl:input message="ns1:getUserByUsername" name="getUserByUsername">
    </wsdl:input>
      <wsdl:output message="ns1:getUserByUsernameResponse" name="getUserByUsernameResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <wsdl:input message="ns1:createUser" name="createUser">
    </wsdl:input>
      <wsdl:output message="ns1:createUserResponse" name="createUserResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUsers">
      <wsdl:input message="ns1:getUsers" name="getUsers">
    </wsdl:input>
      <wsdl:output message="ns1:getUsersResponse" name="getUsersResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUser">
      <wsdl:input message="ns1:updateUser" name="updateUser">
    </wsdl:input>
      <wsdl:output message="ns1:updateUserResponse" name="updateUserResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input message="ns1:deleteUser" name="deleteUser">
    </wsdl:input>
      <wsdl:output message="ns1:deleteUserResponse" name="deleteUserResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserByID">
      <wsdl:input message="ns1:getUserByID" name="getUserByID">
    </wsdl:input>
      <wsdl:output message="ns1:getUserByIDResponse" name="getUserByIDResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findUserByRealName">
      <wsdl:input message="ns1:findUserByRealName" name="findUserByRealName">
    </wsdl:input>
      <wsdl:output message="ns1:findUserByRealNameResponse" name="findUserByRealNameResponse">
    </wsdl:output>
      <wsdl:fault message="ns1:IllegalArgumentException" name="IllegalArgumentException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>